###################################################################
#IRC section
###################################################################

[irc]
[irc.{{ default_irc_network_name }}]
Server="{{ default_irc_network_server }}"
UseTLS=true
SkipTLSVerify=false
UseSASL=false

Nick="{{ default_irc_bot_nick }}"
#UseSASL=true
#NickServNick=""
#NickServPassword=""

## RELOADABLE SETTINGS
## Settings below can be reloaded by editing the file

#Split messages on MessageLength instead of showing the <message clipped>
#WARNING: this could lead to flooding
#OPTIONAL (default false)
MessageSplit=true

#ColorNicks will show each nickname in a different color.
#Only works in IRC right now.
ColorNicks=true

#Nicks you want to ignore. 
#Messages from those users will not be sent to other bridges.
#OPTIONAL
IgnoreNicks="{{ default_irc_ignore_nicks }}"

#RemoteNickFormat defines how remote users appear on this bridge 
RemoteNickFormat="[{PROTOCOL}] <{NOPINGNICK}> "

#Enable to show users joins/parts from other bridges 
#Currently works for messages from the following bridges: irc, mattermost, slack
#OPTIONAL (default false)
ShowJoinPart=true

#Enable to show topic changes from other bridges 
#Only works hiding/show topic changes from slack bridge for now
#OPTIONAL (default false)
ShowTopicChange=true


###################################################################
#slack section
###################################################################
[slack]
[slack.{{ default_slack_team_name }}]
Token="{{ default_slack_api_token }}"

#Icon that will be showed in slack
#The string "{NICK}" (case sensitive) will be replaced by the actual nick / username.
#The string "{BRIDGE}" (case sensitive) will be replaced by the sending bridge
#The string "{LABEL}" (case sensitive) will be replaced by label= field of the sending bridge
#The string "{PROTOCOL}" (case sensitive) will be replaced by the protocol used by the bridge
#OPTIONAL
IconURL="https://robohash.org/{NICK}.png?size=48x48"

## RELOADABLE SETTINGS
## Settings below can be reloaded by editing the file

#Message to be appended to every edited message
#OPTIONAL (default empty)
EditSuffix=" (edited)"

#Whether to prefix messages from other bridges to mattermost with RemoteNickFormat
#Useful if username overrides for incoming webhooks isn't enabled on the 
#slack server. If you set PrefixMessagesWithNick to true, each message 
#from bridge to Slack will by default be prefixed by "bridge-" + nick. You can, 
#however, modify how the messages appear, by setting (and modifying) RemoteNickFormat 
#OPTIONAL (default false)
PrefixMessagesWithNick=false

#Nicks you want to ignore. 
#Messages from those users will not be sent to other bridges.
#OPTIONAL
IgnoreNicks="{{ default_slack_ignore_nicks }}"

#Opportunistically preserve threaded replies between Slack channels.
#This only works if the parent message is still in the cache.
#Cache is flushed between restarts.
#OPTIONAL (default false)
PreserveThreading=true


###################################################################
#General configuration
###################################################################
# Settings here are defaults that each protocol can override
[general]

## RELOADABLE SETTINGS
## Settings below can be reloaded by editing the file

#RemoteNickFormat defines how remote users appear on this bridge 
#The string "{NICK}" (case sensitive) will be replaced by the actual nick / username.
#The string "{BRIDGE}" (case sensitive) will be replaced by the sending bridge
#The string "{LABEL}" (case sensitive) will be replaced by label= field of the sending bridge
#The string "{PROTOCOL}" (case sensitive) will be replaced by the protocol used by the bridge
#The string "{GATEWAY}" (case sensitive) will be replaced by the origin gateway name that is replicating the message.
#The string "{CHANNEL}" (case sensitive) will be replaced by the origin channel name used by the bridge
#OPTIONAL (default empty)
RemoteNickFormat="[{PROTOCOL}] <{NICK}> "

#MediaServerUpload (or MediaDownloadPath) and MediaServerDownload are used for uploading
#images/files/video to a remote "mediaserver" (a webserver like caddy for example).
#When configured images/files uploaded on bridges like mattermost, slack, telegram will be
#downloaded and uploaded again to MediaServerUpload URL
#MediaDownloadPath is the filesystem path where the media file will be placed, instead of uploaded,
#for if Matterbridge has write access to the directory your webserver is serving.
#It is an alternative to MediaServerUpload.
#The MediaServerDownload will be used so that bridges without native uploading support:
#gitter, irc and xmpp will be shown links to the files on MediaServerDownload
#
#More information https://github.com/42wim/matterbridge/wiki/Mediaserver-setup-%5Badvanced%5D
#OPTIONAL (default empty)
#MediaServerUpload="https://user:pass@yourserver.com/upload"
#OPTIONAL (default empty)
#MediaDownloadPath="/srv/http/yourserver.com/public/download"
#OPTIONAL (default empty)
#MediaServerDownload="https://youserver.com/download"

#MediaDownloadSize is the maximum size of attachments, videos, images
#matterbridge will download and upload this file to bridges that also support uploading files.
#eg downloading from slack to upload it to mattermost
#
#It will only download from bridges that don't have public links available, which are for the moment
#slack, telegram, matrix and mattermost
#
#OPTIONAL (default 1000000 (1 megabyte))
#MediaDownloadSize=1000000

#MediaDownloadBlacklist allows you to blacklist specific files from being downloaded.
#Filenames matching these regexp will not be download/uploaded to the mediaserver
#You can use regex for this, see https://regex-golang.appspot.com/assets/html/index.html for more regex info
#OPTIONAL (default empty)
#MediaDownloadBlacklist=[".html$",".htm$"]


###################################################################
#Gateway configuration
###################################################################

[[gateway]]
name="gateway_rit"
enable=true

    [[gateway.inout]]
    account="irc.{{ default_irc_network_name }}"
    channel="{{ matterbridge_config.rit.irc.channel }}"

    [[gateway.inout]]
    account="slack.{{ default_slack_team_name }}"
    channel="{{ matterbridge_config.rit.slack.channel }}"

[[gateway]]
name="gateway_rit_foss"
enable=true

    [[gateway.inout]]
    account="irc.{{ default_irc_network_name }}"
    channel="{{ matterbridge_config.rit_foss.irc.channel }}"

    [[gateway.inout]]
    account="slack.{{ default_slack_team_name }}"
    channel="{{ matterbridge_config.rit_foss.slack.channel }}"

[[gateway]]
name="gateway_rit_lug_sysadmin"
enable=true

    [[gateway.inout]]
    account="irc.{{ default_irc_network_name }}"
    channel="{{ matterbridge_config.rit_lug_sysadmin.irc.channel }}"

    [[gateway.inout]]
    account="slack.{{ default_slack_team_name }}"
    channel="{{ matterbridge_config.rit_lug_sysadmin.slack.channel }}"

[[gateway]]
name="gateway_rit_tigeros"
enable=true

    [[gateway.inout]]
    account="irc.{{ default_irc_network_name }}"
    channel="{{ matterbridge_config.rit_tigeros.irc.channel }}"

    [[gateway.inout]]
    account="slack.{{ default_slack_team_name }}"
    channel="{{ matterbridge_config.rit_tigeros.slack.channel }}"

[[gateway]]
name="gateway_ritlug"
enable=true

    [[gateway.inout]]
    account="irc.{{ default_irc_network_name }}"
    channel="{{ matterbridge_config.ritlug.irc.channel }}"

    [[gateway.inout]]
    account="slack.{{ default_slack_team_name }}"
    channel="{{ matterbridge_config.ritlug.slack.channel }}"

[[gateway]]
name="gateway_ritlug_teleirc"
enable=true

    [[gateway.inout]]
    account="irc.{{ default_irc_network_name }}"
    channel="{{ matterbridge_config.ritlug_teleirc.irc.channel }}"

    [[gateway.inout]]
    account="slack.{{ default_slack_team_name }}"
    channel="{{ matterbridge_config.ritlug_teleirc.slack.channel }}"
